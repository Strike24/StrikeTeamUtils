plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '7.1.2'
}

group = 'ml.itsstrike'
version = '1.0'
shadowJar {
    baseName = "StrikeTeamUtils"
    classifier = ''
    archiveVersion = ''
    destinationDir = file("$rootDir/output")
}

repositories {
    mavenCentral()
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
    maven {
        name = "jitpack"
        url = "https://jitpack.io"
    }
}

dependencies {
    compileOnly "io.papermc.paper:paper-api:1.19.3-R0.1-SNAPSHOT"
    compileOnly 'org.projectlombok:lombok:1.18.26'

    annotationProcessor 'org.projectlombok:lombok:1.18.26'
    implementation 'com.github.Revxrsal.Lamp:common:3.1.3'
    implementation 'com.github.Revxrsal.Lamp:bukkit:3.1.3'
}
compileJava {
    options.compilerArgs += ["-parameters"]
    options.fork = true
    options.encoding = 'utf-8'
}

def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}
